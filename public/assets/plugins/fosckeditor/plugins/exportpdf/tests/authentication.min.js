(function(){bender.loadExternalPlugin("exportpdf","/apps/plugin/");CKEDITOR.plugins.load("exportpdf",function(){function f(e,g){var d=exportPdfUtils.getDefaultConfig("unit",e||{});bender.editorBot.create({name:"editor"+Date.now(),config:d,startupData:"\x3cp\x3eHello World!\x3c/p\x3e"},function(b){g&&g(b.editor)})}var a=function(){var b=sinon.fakeServer.create(),d=0;b.respondWith(function(e){"/incremental_token"===e.url?(e.respond(200,{},"sample-token-value"+d),d+=1):"/empty-token"===e.url?e.respond(200,{},""):e.respond(200,{},"sample-token-value")});return b}(),c;bender.test({setUp:function(){bender.tools.ignoreUnsupportedEnvironment("exportpdf");c=sinon.stub(CKEDITOR.plugins.exportpdf,"downloadFile")},tearDown:function(){c.restore()},"test token is fetched if tokenUrl is correct":function(){f({exportPdf_tokenUrl:"/custom-url"},function(b){b.on("exportPdf",function(d){assert.areEqual(d.data.token,"sample-token-value","Token value is incorrect.")},null,null,17);a.respond();b.execCommand("exportPdf");a.respond()})},"test authentication header is added if token is provided":function(){f({exportPdf_tokenUrl:"/custom-url"},function(b){a.respond();b.execCommand("exportPdf");a.respond();assert.areEqual("sample-token-value",a.requests[a.requests.length-1].requestHeaders.Authorization,"Authorization token was not set properly.")})},"test console.warn is called if tokenUrl is not provided":function(){CKEDITOR.once("log",function(b){b.cancel();assert.areEqual("exportpdf-no-token-url",b.data.errorCode,"There should be URL error log.")});f({exportPdf_tokenUrl:""})},"test console.warn is called on POST request if token is empty":function(){var b=CKEDITOR.on("log",function(d){"exportpdf-no-token"===d.data.errorCode&&(d.cancel(),CKEDITOR.removeListener("log",b),assert.areEqual("exportpdf-no-token",d.data.errorCode,"`exportpdf-no-token` should occur."))});f({exportPdf_tokenUrl:"/empty-token"},function(d){a.respond();d.execCommand("exportPdf");a.respond()})},"test console.warn is called on POST request if token was not fetched at all":function(){var b=CKEDITOR.on("log",function(d){"exportpdf-no-token"===d.data.errorCode&&(d.cancel(),CKEDITOR.removeListener("log",b),assert.areEqual("exportpdf-no-token",d.data.errorCode,"`exportpdf-no-token` should occur."))});f({exportPdf_tokenUrl:"/custom-url"},function(d){d.execCommand("exportPdf");a.respond()})},"test token refreshes in the declared intervals":function(){CKEDITOR.once("instanceCreated",function(b){b.editor.exportPdfTokenInterval=200});f({exportPdf_tokenUrl:"/incremental_token"},function(b){a.respond();setTimeout(function(){resume(function(){a.respond();b.on("exportPdf",function(d){assert.areNotSame(d.data.token,"sample-token-value0","Token was not refreshed.")},null,null,17);b.execCommand("exportPdf");a.respond()})},500);wait()})},"test file is downloaded also without token":function(){f({exportPdf_tokenUrl:"/empty-token"},function(b){a.respond();b.execCommand("exportPdf");a.respond();sinon.assert.calledOnce(c);assert.pass()})}})})})();